name: docker

on:
  workflow_call:
    inputs:
      docker-image:
        default: 'metanorma/metanorma:latest'
        required: false
        type: string
      private-fonts:
        default: 'false'
        required: false
        type: string
      deploy-gh-pages:
        default: 'true'
        required: false
        type: string
    secrets:
      pat_username:
        required: false
      pat_token:
        required: false

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

jobs:
  test-docker:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.docker-image }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.pat_token || github.token }}
          submodules: true

      - if: ${{ inputs.private-fonts == 'true' }}
        run: |
          fontist update
          fontist repo setup metanorma https://metanorma-ci:${{ secrets.pat_token }}@github.com/metanorma/fontist-formulas-private
          fontist repo update metanorma

      - uses: actions/cache@v2
        with:
          path: /config/fonts
          key: fontist-docker
          restore-keys: fontist-docker

      - uses: actions/cache@v2
        with:
          path: ~/.metanorma-ietf-workgroup-cache.json
          key: metanorma-ietf-workgroup-cache
          restore-keys: metanorma-ietf-workgroup-cache

      - uses: metanorma/metanorma-build-scripts/gh-rubygems-setup-action@main
        with:
          token: ${{ secrets.pat_token }}

      - run: apt-get update -y && apt-get install -y gcc g++ ruby-dev

      - uses: metanorma/metanorma-build-scripts/docker-gem-install@main

      - uses: actions-mn/cli/site-gen@main
        with:
          agree-to-terms: true

      - if: hashFiles('collection.yml') != ''
        uses: actions-mn/cli/collection@main
        with:
          manifest: collection.yml
          formats: xml,html,presentation,pdf
          cover-page: sources/collection_cover.html
          output-dir: collection
          agree-to-terms: true

      - if: hashFiles('collection.yml') != ''
        run: mv collection/collection* site/documents/

      - uses: actions/upload-artifact@v2
        with:
          name: site
          path: site

  deploy-gh-pages:
    if: ${{ inputs.deploy-gh-pages == 'true' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') }}
    runs-on: ubuntu-latest
    needs: test-docker
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v1
        with:
          name: site

      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ github.token }}
          publish_dir: ./site
          force_orphan: true
          user_name: ${{ github.actor }}
          user_email: ${{ format('{0}@users.noreply.github.com', github.actor) }}
          commit_message: "${{ format('Deploy to GitHub Pages: {0}', github.sha) }}"

      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ github.token }}
          expire-in: 0
