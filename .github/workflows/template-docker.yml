name: docker

on:
  workflow_call:
    inputs:
      docker-tag:
        default: 'latest'
        required: false
        type: string
    secrets:
      pat_token:
        required: false

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: build-matrix
        run: echo "::set-output name=matrix::$(cat .github/workflows/matrix.json | tr '\n' ' ')"

  generate:
    needs: build-matrix
    runs-on: ubuntu-latest
    container:
      image: metanorma/mn:${{ inputs.docker-tag }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.pat_token || github.token }}
          submodules: true

      - uses: metanorma/metanorma-build-scripts/gh-rubygems-setup-action@main
        with:
          token: ${{ secrets.pat_token }}

      - uses: metanorma/metanorma-build-scripts/docker-gem-install@main

      - uses: actions/cache@v2
        with:
          path: /config/fonts
          key: fontist-${{ runner.os }}
          restore-keys: fontist-${{ runner.os }}

      - uses: metanorma/metanorma-build-scripts/docker-gem-install@main

      - uses: actions-mn/cli/new@main
        with:
          type: ${{ matrix.type }}
          doctype: ${{ matrix.doctype }}
          output-path: test/${{ matrix.doctype }}
          template: '.'
          overwrite: true

      - run: |
          cat << 'EOF' > test/${{ matrix.doctype }}/metanorma.yml
          metanorma:
            source:
              files:
                - document.adoc
          EOF

      - uses: actions-mn/cli/site-gen@main
        with:
          source-path: test/${{ matrix.doctype }}
          config-file: test/${{ matrix.doctype }}/metanorma.yml
          agree-to-terms: true
