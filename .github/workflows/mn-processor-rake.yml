name: rake

on:
  workflow_call:
    inputs:
      samples-matrix-json-file:
        description: 'Samples testing matrix JSON file'
        default: '.github/workflows/samples-matrix-part.json'
        required: false
        type: string
      templates-matrix-json-file:
        description: 'Templates testing matrix JSON file'
        default: '.github/workflows/templates-matrix-part.json'
        required: false
        type: string
    secrets:
      pat_token:
        required: true

jobs:
  prepare:
    uses: metanorma/ci/.github/workflows/prepare-rake.yml@main

  rake:
    name: Test on Ruby ${{ matrix.ruby.version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    needs: prepare
    if: needs.prepare.outputs.push-for-tag != 'true'

    concurrency:
      group: '${{ github.workflow }}-${{ matrix.os }}-${{ matrix.ruby.version }}-${{ github.head_ref || github.ref_name }}'
      cancel-in-progress: true

    continue-on-error: ${{ matrix.ruby.experimental }}
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: metanorma/ci/gh-rubygems-setup-action@main
        with:
          token: ${{ secrets.pat_token }}

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby.version }}
          bundler-cache: true
          rubygems: ${{ matrix.ruby.rubygems }}

      - run: bundle exec rake

  build-matrices:
    runs-on: ubuntu-latest
    outputs:
      flavor: ${{ steps.flavor.outputs.value }}
      samples-matrix: ${{ steps.build-samples-matrix.outputs.matrix }}
      templates-matrix: ${{ steps.build-templates-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - id: flavor
        run: |
          FLAVOR=$(echo "${{ github.repository }}" | rev | cut -d- -f1 | rev)
          echo "value=${FLAVOR}" >> $GITHUB_OUTPUT

      - id: build-samples-matrix
        env:
          FLAVOR: ${{ steps.flavor.outputs.value }}
        run: |
          if [ ! -f ${{ inputs.samples-matrix-json-file }} ]; then
            if curl --fail --head "https://github.com/metanorma/mn-samples-${FLAVOR}"; then
              echo "{ \"flavor\": [ { \"id\": \"${FLAVOR}\", \"experimental\": false } ] }" > ${{ inputs.samples-matrix-json-file }}
            else
              echo "No ${{ inputs.samples-matrix-json-file }} or https://github.com/metanorma/mn-samples-${FLAVOR} found!"
              echo "Commit ${{ inputs.samples-matrix-json-file }} or pass custom file in samples-matrix-json-file"
              echo "matrix=[]" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi
          wget https://raw.githubusercontent.com/metanorma/ci/main/.github/workflows/ruby-matrix.json
          # remove 'middle' & 'experimental' versions
          echo "$(jq 'del(.ruby[1, 2])' ruby-matrix.json)" > ruby-matrix.json
          echo "matrix=$(jq -s add ruby-matrix.json ${{ inputs.samples-matrix-json-file }} | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - id: build-templates-matrix
        env:
          FLAVOR: ${{ steps.flavor.outputs.value }}
        run: |
          if [ ! -f ${{ inputs.templates-matrix-json-file }} ]; then
            if ! wget https://raw.githubusercontent.com/metanorma/mn-templates-${FLAVOR}/master/.github/workflows/matrix.json -O ${{ inputs.templates-matrix-json-file }}; then
              echo "No ${{ inputs.templates-matrix-json-file }} or https://github.com/metanorma/mn-templates-${FLAVOR} found!"
              echo "Commit ${{ inputs.templates-matrix-json-file }} or pass custom file in templates-matrix-json-file"
              echo "matrix=[]" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi
          echo "matrix=$(jq -s add ruby-matrix.json ${{ inputs.templates-matrix-json-file }} | tr '\n' ' ')" >> $GITHUB_OUTPUT

  test-templates:
    name: Test ${{ matrix.doctype }} template ${{ matrix.ruby.version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build-matrices

    if: ${{ needs.build-matrices.outputs.templates-matrix != '[]' }}

    concurrency:
      group: 'template-${{ matrix.doctype }}-${{ matrix.os }}-${{ matrix.ruby.version }}-${{ github.head_ref || github.ref_name }}'
      cancel-in-progress: true

    continue-on-error: ${{ matrix.experimental || matrix.ruby.experimental }}
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrices.outputs.templates-matrix) }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: metanorma/ci/gh-rubygems-setup-action@main
      with:
        token: ${{ secrets.pat_token }}

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby.version }}
        rubygems: ${{ matrix.ruby.rubygems }}
        bundler-cache: true

    - run: gem install metanorma-cli

    - uses: actions-mn/cli/new@main
      with:
        type: ${{ matrix.type }}
        doctype: ${{ matrix.doctype }}
        output-path: template
        template: https://github.com/metanorma/mn-templates-${{ matrix.type }}
        overwrite: true

    - run: |
        bundle remove metanorma-${{ matrix.type }} || true
        bundle add metanorma-${{ matrix.type }} --path ..
        bundle add sassc
      working-directory: template

    - uses: actions-mn/site-gen@v1
      with:
        source-path: template
        agree-to-terms: true
        use-bundler: true

  test-samples:
    name: Test samples ${{ matrix.ruby.version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build-matrices

    if: ${{ needs.build-matrices.outputs.samples-matrix != '[]' }}

    concurrency:
      group: 'sample-${{ matrix.os }}-${{ matrix.ruby.version }}-${{ github.head_ref || github.ref_name }}'
      cancel-in-progress: true

    continue-on-error: ${{ matrix.ruby.experimental }}
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrices.outputs.samples-matrix) }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: metanorma/ci/gh-rubygems-setup-action@main
      with:
        token: ${{ secrets.pat_token }}

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby.version }}
        rubygems: ${{ matrix.ruby.rubygems }}
        bundler-cache: true

    - if: ${{ matrix.flavor.id == 'bsi' }}
      uses: metanorma/ci/fontist-setup@main
      with:
        private-fonts-pat: ${{ secrets.pat_token }}

    - uses: metanorma/ci/inkscape-setup-action@main

    - uses: actions/checkout@v3
      with:
        submodules: recursive
        repository: metanorma/mn-samples-${{ matrix.flavor.id }}
        token: ${{ secrets.pat_token }}
        path: samples
        fetch-depth: 1

    - run: |
        bundle remove metanorma-${{ matrix.flavor.id }} || true
        bundle add metanorma-${{ matrix.flavor.id }} --path ..
        bundle add sassc
      working-directory: samples

    - uses: actions-mn/site-gen@v1
      with:
        source-path: samples
        agree-to-terms: true
        use-bundler: true

  tests-passed:
    needs: [rake, test-samples, test-templates]
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/repository-dispatch@v2
        name: Tests passed
        with:
          token: ${{ secrets.pat_token || github.token }}
          repository: ${{ github.repository }}
          event-type: tests-passed
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "type": "tests-passed"}'

      - if: startsWith(github.ref, 'refs/tags/v')
        name: Repository ready for release
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.pat_token || github.token }}
          repository: ${{ github.repository }}
          event-type: do-release
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "type": "do-release"}'
