name: rake

on:
  workflow_call:
    secrets:
      pat_token:
        required: false

jobs:
  prepare:
    uses: metanorma/ci/.github/workflows/prepare-rake.yml@main

  rake:
    name: Test on Ruby ${{ matrix.ruby.version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    needs: prepare
    if: needs.prepare.outputs.push-for-tag != 'true'

    concurrency:
      group: '${{ github.workflow }}-${{ matrix.os }}-${{ matrix.ruby.version }}-${{ github.head_ref || github.ref_name }}'
      cancel-in-progress: true

    continue-on-error: ${{ matrix.ruby.experimental }}
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby.version }}
          bundler-cache: true
          rubygems: ${{ matrix.ruby.rubygems }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: set PIP_DOWNLOAD_CACHE
        shell: python
        run: |
          import os
          import platform
          from os.path import expanduser

          home = expanduser("~")
          cache_path = {
            "Linux": f"{home}/.cache/pip",
            "Darwin": f"{home}Library/Caches/pip",
            "Windows": f"{home}\\AppData\\Local\\pip\\Cache"
          }[platform.system()]

          os.system(f"echo PIP_DOWNLOAD_CACHE={cache_path} >> {os.environ['GITHUB_ENV']}")

      - uses: actions/cache@v3
        with:
          path: ${{ env.PIP_DOWNLOAD_CACHE }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - uses: actions/cache@v3
        with:
          path: ~/.cache/xml2rfc
          key: xml2rfc
          restore-keys: xml2rfc

      - if: matrix.os == 'macos-latest'
        run: brew install libmagic

      - if: matrix.os == 'windows-latest'
        run: pip install python-magic-bin

      - run: pip install xml2rfc

      - run: bundle exec rake

  tests-passed:
    needs: rake
    runs-on: ubuntu-latest
    steps:
      - uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.pat_token || github.token }}
          repository: ${{ github.repository }}
          event-type: tests-passed
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "type": "tests-passed"}'
