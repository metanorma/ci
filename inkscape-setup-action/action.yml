name: 'inkscape-setup-action'
description: 'composite action which installs inkscape for all OSes'
runs:
  using: "composite"
  steps:
    - shell: python
      run: |
        import os
        import sys
        import platform

        win_prefix = "C:\\Program Files\\Inkscape\\bin"

        def os_release():
          try:
            return platform.freedesktop_os_release()
          except IOError:
            # https://github.com/metanorma/metanorma-cli/issues/315
            return {}
          except AttributeError:
            properties = {}
            try:
              with open("/etc/os-release", "r") as file:
                for line in file:
                  line = line.strip()
                  if line and not line.startswith("#"):
                    key, value = line.split("=", 1)
                    properties[key] = value.strip('"')
            except:
              pass
            return properties

        os_release_dict = os_release()

        print(os_release_dict)

        platform_name = "Ubuntu" if os_release_dict.get("ID", None) == "ubuntu" else platform.system()

        cmds = {
          "Darwin": [ "HOMEBREW_CASK_OPTS='--no-quarantine' brew install --cask inkscape", "inkscape --version" ],
          "Windows": [
            "choco install --no-progress -y inkscape",
            "echo {}>> {}".format(win_prefix, os.environ["GITHUB_PATH"]),
            "\"{}\\inkscape\" --version".format(win_prefix)
          ],
          "Ubuntu": [
            "sudo add-apt-repository ppa:inkscape.dev/stable",
            "sudo apt update",
            "sudo apt install inkscape",
            "which inkscape",
            "inkscape --version"
          ],
          "Linux": [
            "wget https://inkscape.org/gallery/item/42330/Inkscape-0e150ed-x86_64.AppImage -O /usr/local/bin/inkscape",
            "sudo chmod +x /usr/local/bin/inkscape",
            "inkscape --version"
          ]
        }.get(platform_name, [ "echo \"Unsupported platform: {}\"".format(platform_name), "exit 1" ])

        for cmd in cmds:
          if os.system(cmd) != 0:
            print("Command {} FAILED!".format(cmd))
            sys.exit(1)

    # https://github.com/metanorma/metanorma-cli/issues/309
    - name: Update eps_input.inx to allow noninteractive EPS processing
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo python ${GITHUB_ACTION_PATH//\\//}/fix_eps_input_autorotate_param.py
        else
          python ${GITHUB_ACTION_PATH//\\//}/fix_eps_input_autorotate_param.py
        fi
      shell: bash
